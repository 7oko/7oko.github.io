<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>一加8的Android 11 折腾指南</title>
    <url>/2020/10/28/Oneplus8-Android11-MagiskEdxposed/</url>
    <content><![CDATA[<p>记录下手里一加8愉快的折腾之旅~</p>
<a id="more"></a>

<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li><p>解锁Bootloader且打开USB调试的一加8</p>
</li>
<li><p>氢OS Android11 Rom包</p>
</li>
<li><p>Payload Dumber </p>
</li>
<li><p>platform-tools</p>
<p>打包下载： pan.baidu.com/s/1afSr1snXan4LoBLX9l0Urg 【pcge】</p>
</li>
</ul>
<h1 id="刷入Magisk"><a href="#刷入Magisk" class="headerlink" title="刷入Magisk"></a>刷入Magisk</h1><h2 id="制作magisk-patched-img"><a href="#制作magisk-patched-img" class="headerlink" title="制作magisk_patched.img"></a>制作magisk_patched.img</h2><ul>
<li><p>将官方包内的<code>payload.bin</code> 解压并放入Payload Dumber 的payload_input目录</p>
</li>
<li><p>打开<code>payload_dumper.exe</code>（看到boot解压出来就可以关闭了）</p>
</li>
<li><p>打开payload_output目录，将解压出的<code>boot.img</code>复制到手机根目录</p>
</li>
<li><p>下载并安装Magisk最新版本 (<a href="https://github.com/topjohnwu/Magisk/releases" target="_blank" rel="noopener">https://github.com/topjohnwu/Magisk/releases</a>)</p>
<p>选择安装Magisk-选择并修补一个文件，选中放在根目录的<code>boot.img</code> ，等待修补完成</p>
</li>
<li><p>将手机download目录下的修补完成的<code>magisk_patched.img</code>复制到电脑</p>
</li>
</ul>
<h2 id="工具刷入mgisk-patched-img"><a href="#工具刷入mgisk-patched-img" class="headerlink" title="工具刷入mgisk_patched.img"></a>工具刷入mgisk_patched.img</h2><ul>
<li>将<code>mgisk_patched.img</code>放入 platform-tools 目录下</li>
<li>运行 <code>打开CMD命令行.bat</code><ul>
<li><code>adb reboot bootloader</code></li>
<li><code>fastboot flash boot_a magisk_patched.img</code></li>
<li><code>fastboot flash boot_b magisk_patched.img</code></li>
<li><code>fastboot reboot</code></li>
</ul>
</li>
</ul>
<h1 id="刷入EdXposed"><a href="#刷入EdXposed" class="headerlink" title="刷入EdXposed"></a>刷入EdXposed</h1><ul>
<li>刷入<code>Riru - Core</code>模块</li>
<li>刷入<code>Riru - EdXposed(YAHFA)</code> 或<code>Riru - EdXposed(SandHook)</code>模块</li>
<li>安装最新的<code>Edxposed Manager</code> </li>
</ul>
<h1 id="总结与注意事项"><a href="#总结与注意事项" class="headerlink" title="总结与注意事项"></a>总结与注意事项</h1><ul>
<li>制作<code>mgisk_patched.img</code>时要用最新的 v8.0.x版本，不能使用以往的v21.0版本</li>
<li>刷写<code>mgisk_patched.img</code>时 a/b分区都要</li>
<li>如果因刷入不兼容的模块导致无法开机，可以尝试<strong>卸载全部magisk模块</strong><ul>
<li><code>adb shell</code></li>
<li><code>magisk --remove-modules</code></li>
<li><code>adb reboot</code></li>
</ul>
</li>
</ul>
<p><img src="op8info.jpg" alt="op8info"></p>
<p><img src="op8magisk1.jpg" alt="op8magisk1"></p>
<p><img src="op8magisk2.jpg" alt="op8magisk2"></p>
<p><img src="op8edxposed.jpg" alt="op8edxposed"></p>
]]></content>
      <categories>
        <category>Life</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Magisk</tag>
        <tag>Edxposed</tag>
      </tags>
  </entry>
  <entry>
    <title>基于mkdocs搭建自己的wiki平台</title>
    <url>/2020/10/19/MkdocsWiki/</url>
    <content><![CDATA[<p>前几天在浏览 <a href="https://wiki.geekplux.com/" target="_blank" rel="noopener">GeekPlux’s Wiki</a> 时, 很羡慕博主在掌握那么多种知识的同时还能有条理地梳理出来, 于是开始动工搭建自己的知识化wiki.</p>
<a id="more"></a>

<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li>GitHub 账号</li>
<li>Python 2.6及以上</li>
<li>Python package manager <a href="http://pip.readthedocs.org/en/latest/installing.html" target="_blank" rel="noopener">pip</a> </li>
<li>独立域名(可选)</li>
</ul>
<h1 id="安装MkDocs"><a href="#安装MkDocs" class="headerlink" title="安装MkDocs"></a>安装MkDocs</h1><ul>
<li><p>使用pip安装mkdocs <code>pip install mkdocs</code> </p>
<p><strong>这里我选用的是material for MkDocs <code>pip install mkdocs-material</code></strong></p>
</li>
<li><p>运行<code>mkdocs help</code> 检查是否正确安装</p>
</li>
</ul>
<h1 id="使用MkDocs"><a href="#使用MkDocs" class="headerlink" title="使用MkDocs"></a>使用MkDocs</h1><ul>
<li><p>初始化新项目</p>
<p> <code>mkdocs new mywiki</code></p>
<p><code>cd mywiki</code></p>
</li>
<li><p>预览当前文档</p>
<p><code>mkdocs serve</code></p>
</li>
<li><p>在浏览器中打开 http:<em>//127.0.0.1:8000/</em></p>
<p>(预览文档的内建服务器支持在配置文件,文档目录或主题发生改变时自动载入并重新生成文档.)</p>
</li>
<li><p>配置MkDocs</p>
<p> 修改<code>mkdocs.yml</code>文件,详细配置可以查看<a href="https://www.mkdocs.org/" target="_blank" rel="noopener">MkDocs官网</a>  <a href="https://squidfunk.github.io/mkdocs-material/" target="_blank" rel="noopener">Material for MkDocs官网</a></p>
</li>
</ul>
<h1 id="托管到Github"><a href="#托管到Github" class="headerlink" title="托管到Github"></a>托管到Github</h1><ul>
<li>将<code>Mkdocs build</code> 后生成的<code>site</code>文件夹所有内容push到新建的repo</li>
</ul>
<h1 id="绑定独立域名"><a href="#绑定独立域名" class="headerlink" title="绑定独立域名"></a>绑定独立域名</h1><ul>
<li>不绑定独立域名的情况下,可以在<code>http://{username}.github.io/{projectname}</code> 打开</li>
<li>添加 CNAME文件,内容为你的域名(这里以我搭建的toko.wiki为例)</li>
<li>添加 CNAME 域名解析<ul>
<li>主机记录 @</li>
<li>记录类型 CNAME</li>
<li>记录值 username.github.io (我这里是7oko.github.io)</li>
</ul>
</li>
<li>等待解析完成~</li>
</ul>
]]></content>
      <categories>
        <category>Work</category>
        <category>wiki</category>
      </categories>
      <tags>
        <tag>wiki</tag>
        <tag>mkdocs</tag>
      </tags>
  </entry>
  <entry>
    <title>Git学习笔记</title>
    <url>/2020/04/23/GitNotes/</url>
    <content><![CDATA[<blockquote>
<p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p>
<p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p>
<p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。    </p>
</blockquote>
<a id="more"></a>

<p><img src="learnGit.png" alt="learnGit"></p>
<h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git init  <span class="comment"># 在当前目录新建一个 Git 代码库</span></span><br><span class="line">$ git <span class="built_in">clone</span> [url]  <span class="comment"># 下载一个项目和它的整个代码历史</span></span><br><span class="line">$ git config --list <span class="comment"># 显示当前的 Git 配置</span></span><br><span class="line">$ git config -e [--global]  <span class="comment"># 编辑 Git 配置文件</span></span><br><span class="line">$ git add  <span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">$ git rm   <span class="comment"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">$ git commit -m [message]  <span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">$ git commit -a <span class="comment"># 提交工作区自上次 commit 之后的变化，直接到仓库区</span></span><br><span class="line">$ git commit --amend -m [message]   <span class="comment"># 使用一次新的 commit，替代上一次提交 如果代码没有任何新变化，则用来改写上一次 commit 的提交信息</span></span><br><span class="line">$ git commit --amend [file1] [file2] ...  <span class="comment"># 重做上一次 commit，并包括指定文件的新变化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 分支相关</span></span><br><span class="line">$ git branch  <span class="comment"># 列出所有本地分支</span></span><br><span class="line">$ git branch -r  <span class="comment"># 列出所有远程分支</span></span><br><span class="line">$ git branch [branch-name]  <span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">$ git checkout [branch-name]  <span class="comment"># 切换到指定分支，并更新工作区</span></span><br><span class="line">$ git checkout -b [branch]  <span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">$ git branch [branch] [commit]  <span class="comment"># 新建一个分支，指向指定 commit</span></span><br><span class="line">$ git checkout -b [branch] [tag]  <span class="comment"># 新建一个分支，指向某个 tag</span></span><br><span class="line">$ git branch --track [branch] [remote-branch]  <span class="comment"># 新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line">$ git branch --<span class="built_in">set</span>-upstream [branch] [remote-branch]  <span class="comment"># 建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line">$ git merge [branch]  <span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">$ git cherry-pick [commit]  <span class="comment"># 选择一个 commit，合并进当前分支</span></span><br><span class="line">$ git branch -d [branch-name]  <span class="comment"># 删除分支</span></span><br><span class="line">$ git push origin --delete [branch-name] <span class="comment"># 删除远程分支</span></span><br><span class="line">$ git branch -dr [remote/branch]  <span class="comment"># 删除远程分支</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 标签</span></span><br><span class="line">$ git tag  <span class="comment"># 列出所有 tag</span></span><br><span class="line">$ git tag [tag] <span class="comment"># 新建一个 tag 在当前 commit</span></span><br><span class="line">$ git tag [tag] [commit] <span class="comment"># 新建一个 tag 在指定 commit</span></span><br><span class="line">$ git show [tag]  <span class="comment"># 查看 tag 信息</span></span><br><span class="line">$ git push [remote] [tag]  <span class="comment"># 提交指定 tag</span></span><br><span class="line">$ git push [remote] --tags   <span class="comment"># 提交所有 tag</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">$ git status <span class="comment"># 显示有变更的文件</span></span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span> <span class="comment"># 显示 commit 历史，以及每次 commit 发生变更的文件</span></span><br><span class="line">$ git <span class="built_in">log</span> --follow [file] <span class="comment"># 显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">$ git <span class="built_in">log</span> -p [file] <span class="comment"># 显示指定文件相关的每一次 diff</span></span><br><span class="line">$ git blame [file] <span class="comment"># 显示指定文件是什么人在什么时间修改过</span></span><br><span class="line">$ git diff <span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">$ git diff --cached [file] <span class="comment"># 显示暂存区和上一个 commit 的差异</span></span><br><span class="line">$ git diff HEAD <span class="comment"># 显示工作区与当前分支最新 commit 之间的差异</span></span><br><span class="line">$ git diff [first-branch]...[second-branch] <span class="comment"># 显示两次提交之间的差异</span></span><br><span class="line">$ git show [commit] <span class="comment"># 显示某次提交的元数据和内容变化</span></span><br><span class="line">$ git show --name-only [commit] <span class="comment"># 显示某次提交发生变化的文件</span></span><br><span class="line">$ git show [commit]:[filename] <span class="comment"># 显示某次提交时，某个文件的内容</span></span><br><span class="line">$ git reflog <span class="comment"># 显示当前分支的最近几次提交</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程</span></span><br><span class="line">$ git fetch [remote] <span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">$ git remote -v  <span class="comment"># 显示所有远程仓库</span></span><br><span class="line">$ git remote show [remote]  <span class="comment"># 显示某个远程仓库的信息</span></span><br><span class="line">$ git remote add [shortname] [url]  <span class="comment"># 增加一个新的远程仓库，并命名</span></span><br><span class="line">$ git pull [remote] [branch]  <span class="comment"># 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line">$ git push [remote] [branch] <span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line">$ git push [remote] --force <span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">$ git push [remote] --all <span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销</span></span><br><span class="line">$ git checkout [file] <span class="comment"># 恢复暂存区的指定文件到工作区</span></span><br><span class="line">$ git checkout [commit] [file] <span class="comment"># 恢复某个 commit 的指定文件到工作区</span></span><br><span class="line">$ git checkout . <span class="comment"># 恢复上一个 commit 的所有文件到工作区</span></span><br><span class="line">$ git reset [file] <span class="comment"># 重置暂存区的指定文件，与上一次 commit 保持一致，但工作区不变</span></span><br><span class="line">$ git reset --hard <span class="comment"># 重置暂存区与工作区，与上一次 commit 保持一致</span></span><br><span class="line">$ git reset [commit] <span class="comment"># 重置当前分支的指针为指定 commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">$ git reset --hard [commit] <span class="comment"># 重置当前分支的 HEAD 为指定 commit，同时重置暂存区和工作区，与指定 commit 一致</span></span><br><span class="line">$ git reset --keep [commit] <span class="comment"># 重置当前 HEAD 为指定 commit，但保持暂存区和工作区不变</span></span><br><span class="line">$ git revert [commit] <span class="comment"># 新建一个 commit，用来撤销指定 commit，后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br></pre></td></tr></table></figure>
<h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><ul>
<li><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">git - 简明指南</a> </li>
<li><a href="http://git-scm.com/book/zh/v1" target="_blank" rel="noopener">pro git（中文版）</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git 教程</a></li>
<li><a href="http://gitref.org/zh/index.html" target="_blank" rel="noopener">Git 参考手册</a></li>
<li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/" target="_blank" rel="noopener">Git 指南</a></li>
<li><a href="http://pcottle.github.io/learnGitBranching/" target="_blank" rel="noopener">Learn Git Branching</a></li>
</ul>
]]></content>
      <categories>
        <category>Study</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>寻找两个有序数组的中位数</title>
    <url>/2020/04/10/MedianOfTwoSortedArrays/</url>
    <content><![CDATA[<p>​    最近刚开始刷Leetcode，第一道<code>Hard</code>题就难倒了我。题解里有位大神的算法很巧妙，我很容易就理解了，在此做个记录。</p>
<a id="more"></a>

<blockquote>
<p>题目链接：<a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/median-of-two-sorted-arrays/</a></p>
<p>题解链接：<a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/solution/4-xun-zhao-liang-ge-you-xu-shu-zu-de-zhong-wei-shu/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/median-of-two-sorted-arrays/solution/4-xun-zhao-liang-ge-you-xu-shu-zu-de-zhong-wei-shu/</a> </p>
</blockquote>
<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><blockquote>
<p>给定两个大小为 m 和 n 的有序数组 <code>nums1</code> 和 <code>nums2</code>。</p>
<p>请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 <code>O(log(m + n))</code>。</p>
<p>你可以假设 <code>nums1</code> 和 <code>nums2</code> 不会同时为空。</p>
<p>示例 1:</p>
<blockquote>
<p>nums1 = [1, 3]<br>nums2 = [2]</p>
</blockquote>
<p>则中位数是 <code>2.0</code><br>示例 2:</p>
<blockquote>
<p>nums1 = [1, 2]<br>nums2 = [3, 4]</p>
</blockquote>
<p>则中位数是 <code>(2 + 3)/2 = 2.5</code></p>
</blockquote>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="首先要理解中位数"><a href="#首先要理解中位数" class="headerlink" title="首先要理解中位数"></a>首先要理解中位数</h3><blockquote>
<p>中位数（Median）又称中值，统计学中的专有名词，是按顺序排列的一组数据中居于中间位置的数，代表一个样本、种群或概率分布中的一个数值，其可将数值集合划分为相等的上下两部分。对于有限的数集，可以通过把所有观察值高低排序后找出正中间的一个作为中位数。如果观察值有偶数个，通常取最中间的两个数值的平均数作为中位数。</p>
</blockquote>
<blockquote>
<p><code>[2 3 5]</code> 中位数是<code>3</code></p>
<p><code>[1 4 7 9]</code> 中位数是<code>(4+7)/2=5.5</code></p>
</blockquote>
<h3 id="割-Cut-的概念"><a href="#割-Cut-的概念" class="headerlink" title="割(Cut)的概念"></a>割(Cut)的概念</h3><ul>
<li><p>通过切一刀，可以把有序数组分成左右两个部分，切的那一刀就被称为割(Cut)。</p>
</li>
<li><p>割(Cut)的左右会有两个元素，分别是左边最大值和右边最小值。</p>
</li>
<li><p>定义<code>LMax= Max(LeftPart)</code> <code>RMin = Min(RightPart)</code>  //<strong>由小到大的有序数组</strong></p>
</li>
<li><p><strong>割可以割在2个数中间，也可以割在1个数上，如果割在一个数上，那么这个数既属于左边，也属于右边</strong></p>
</li>
</ul>
<blockquote>
<p>奇数组:<code>[2 3 5]</code> 对应的中位数为<code>3</code>，假定割(Cut)在3上，我们可以把3分为2个： <code>[2（3/3） 5]</code></p>
<p>因此<code>LMax=3</code>, <code>RMin=3</code></p>
<p>偶数组: <code>[1 4 7 9]</code> 对应的中位数为 <code>(4 + 7) /2 = 5.5</code>,假定割(Cut)在4和7之间： <code>[1 （4/7）9]</code></p>
<p>因此<code>LMax=4</code>,<code>RMin=7</code></p>
</blockquote>
<h3 id="割和第k个元素"><a href="#割和第k个元素" class="headerlink" title="割和第k个元素"></a>割和第<code>k</code>个元素</h3><h4 id="一个数组"><a href="#一个数组" class="headerlink" title="一个数组"></a>一个数组</h4><p>对于有序数组A，如果在k的位置割一下，容易得出<code>LMax = RMin = A[k]</code></p>
<h4 id="两个数组"><a href="#两个数组" class="headerlink" title="两个数组"></a>两个数组</h4><p>将两个数组合成一个有序数组时，第k位的元素</p>
<blockquote>
<p>我们设:<br><code>Ci</code>为第<code>i</code>个数组的割</p>
<p><code>LMaxi</code>为第<code>i</code>个数组割后的左元素i</p>
<p><code>RMini</code>为第<code>i</code>个数组割后的右元素</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">Leftpart</th>
<th align="center">Ci</th>
<th align="center">Rightpart</th>
</tr>
</thead>
<tbody><tr>
<td align="center">a<sub>1</sub>,a<sub>2</sub>,…,a<sub>i</sub></td>
<td align="center">/</td>
<td align="center">a<sub>i+1</sub>,a<sub>i+2</sub>,…,a<sub>m</sub></td>
</tr>
<tr>
<td align="center">b<sub>1</sub>,b<sub>2</sub>,…,b<sub>j</sub></td>
<td align="center">/</td>
<td align="center">b<sub>j+1</sub>,b<sub>j+2</sub>,…,b<sub>n</sub></td>
</tr>
</tbody></table>
<p>首先，因为数组是有序的，所以<code>LMax1 &lt;= RMin1</code>，<code>LMax2 &lt;= RMin2</code> //割在某个数上时左右相等 </p>
<p>其次，如果让<code>LMax1 &lt;= RMin2</code>，<code>LMax2 &lt;= RMin1</code> 呢？</p>
<p>这表示左半边全部小于右半边。如果让左边的元素个数相加刚好为<code>k</code>，那第<code>k</code>个元素就是<code>max(LMax1, Lmax2)</code>，也就是合并后有序数组左边<code>k</code>个元素的最大值。</p>
<p>那么如果<code>LMax1 &gt; RMin2</code>，说明数组1的左边元素太多，我们把<code>C1</code>减小，<code>C2 = k - C1</code>相应地增大。<code>LMax2 &gt; RMin1</code>同理，把<code>C2</code>减小，<code>C1 = k - C2</code>也就相应地增大。</p>
<h5 id="举例（设k-3）"><a href="#举例（设k-3）" class="headerlink" title="举例（设k = 3）"></a>举例（设k = 3）</h5><blockquote>
<p>[2 3 5]<br>[1 4 7 9]</p>
</blockquote>
<p>设<code>C1 = 1</code>，则 <code>C2 = k - C1 = 2</code> 割后：</p>
<blockquote>
<p>[2 3 / 5]<br>[1 / 4 7 9]</p>
</blockquote>
<p>此时，<code>LMax1 = 3</code>, <code>RMin1 = 5</code>, <code>LMax2 = 1</code>, <code>RMin2 = 4</code>, </p>
<p>满足 <code>LMax1 &lt; RMin2</code> 且 <code>LMax2 &lt; RMin1</code>，</p>
<p>所以第<code>3</code>个元素为<code>max(LMax1, LMax2) = 3</code></p>
<h3 id="两个数组合并后的长度问题-（本篇题解巧妙所在）"><a href="#两个数组合并后的长度问题-（本篇题解巧妙所在）" class="headerlink" title="两个数组合并后的长度问题 （本篇题解巧妙所在）"></a><strong>两个数组合并后的长度问题</strong> （本篇题解巧妙所在）</h3><blockquote>
<p>两个数组的最大问题是，它们合并后，m+n总数可能为奇, 也可能为偶，所以我们得想法让m+n总是为偶数</p>
<p>通过虚拟加入‘#’，我们让m转换成2m+1 ，n转换成2n+1, 两数之和就变成了2m+2n+2，恒为偶数。</p>
<p>注意是虚拟加，其实根本没这一步，通过下面的转换，我们可以保证虚拟加后每个元素跟原来的元素一一对应</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">before</th>
<th align="center">len</th>
<th align="center">after</th>
<th align="center">len</th>
</tr>
</thead>
<tbody><tr>
<td align="center">[1 4 7 9]</td>
<td align="center">4</td>
<td align="center">[# 1 # 4 # 7 # 9]</td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">[2 3 5]</td>
<td align="center">3</td>
<td align="center">[# 2 # 3 # 5 ]</td>
<td align="center">7</td>
</tr>
</tbody></table>
<p>这么虚拟加后，<strong>每个位置可以通过/2得到原来元素的位置</strong>：</p>
<p>比如 2，原来在<code>0</code>位，现在是1位，<code>1/2=0</code></p>
<p>比如 3，原来在<code>1</code>位，现在是3位，<code>3/2=1</code></p>
<p>比如 5，原来在<code>2</code>位，现在是5位，<code>5/2=2</code></p>
<p>比如 9，原来在<code>3</code>位，现在是7位，<code>7/2=3</code></p>
<p>而对于割(<code>Cut</code>)，如果割在<code>‘#’</code>上等于割在2个元素之间，割在数字上等于把数字划到2个部分，总是有以下成立：</p>
<blockquote>
<p>LMaxi = (Ci-1)/2 位置上的元素<br>RMini = Ci/2 位置上的元素</p>
</blockquote>
<p> 例如：</p>
<p>割在<code>3</code>上，<code>C = 3</code>，<code>LMax=a[(3-1)/2]=A[1]，RMin=a[3/2] =A[1]</code>，刚好都是3的位置！</p>
<p>割在4/7之间‘#’，<code>C = 4</code>，<code>LMax=A[(4-1)/2]=A[1]=4 ，RMin=A[4/2]=A[2]=7</code></p>
<p>剩下的事情就好办了，把2个数组看做一个虚拟的数组A，A有<code>2m+2n+2</code>个元素，割在<code>m+n+1</code>处，所以我们只需找到<code>m+n+1</code>位置的元素和<code>m+n+2</code>位置的元素就行了。</p>
<p>左边：<code>A[m+n+1] = Max(LMax1,LMax2)</code></p>
<p>右边：<code>A[m+n+2] = Min(RMin1,RMin2)</code></p>
<p>==&gt;<code>Mid = (A[m+n+1]+A[m+n+2])/2 = (Max(LMax1,LMax2) + Min(RMin1,RMin2) )/2</code></p>
<h3 id="最快的割-Cut-是使用二分法，有2个数组，我们对哪个做二分呢？"><a href="#最快的割-Cut-是使用二分法，有2个数组，我们对哪个做二分呢？" class="headerlink" title="最快的割(Cut)是使用二分法，有2个数组，我们对哪个做二分呢？"></a>最快的割(<code>Cut</code>)是使用二分法，有2个数组，我们对哪个做二分呢？</h3><p>根据之前的分析，我们知道了，只要C1或C2确定，另外一个也就确定了。这里，为了效率，我们肯定是选<code>长度较短</code>的做二分，假设为<code>C1</code>。</p>
<p><code>LMax1&gt;RMin2</code>，把<code>C1</code>减小，<code>C2</code>增大。—&gt; <code>C1</code>向左二分</p>
<p><code>LMax2&gt;RMin1</code>，把<code>C1</code>增大，<code>C2</code>减小。—&gt; <code>C1</code>向右二分</p>
<h3 id="如果C1或C2已经到头了怎么办？"><a href="#如果C1或C2已经到头了怎么办？" class="headerlink" title="如果C1或C2已经到头了怎么办？"></a>如果<code>C1</code>或<code>C2</code>已经到头了怎么办？</h3><p>这种情况出现在：<code>如果有个数组完全小于或大于中值</code>。假定n&lt;m, 可能有4种情况：</p>
<p><code>C1 = 0</code> —— 数组1整体都在右边了，所以都比中值大，中值在数组2中，简单的说就是数组1割后的左边是空了，所以我们可以假定<code>LMax1 = INT_MIN</code></p>
<p><code>C1 =2n</code> —— 数组1整体都在左边了，所以都比中值小，中值在数组2中 ，简单的说就是数组1割后的右边是空了，所以我们可以假定<code>RMin1= INT_MAX</code>，来保证<code>LMax2 &lt; RMin1</code>恒成立</p>
<p><code>C2 = 0</code>—— 数组2整体在右边了，所以都比中值大，中值在数组1中 ，简单的说就是数组2割后的左边是空了，所以我们可以假定<code>LMax2 = INT_MIN</code><br><code>C2 = 2m</code>—— 数组2整体在左边了，所以都比中值小，中值在数组1中, 简单的说就是数组2割后的右边是空了，为了让<code>LMax1 &lt; RMin2</code>恒成立，我们可以假定<code>RMin2 = INT_MAX</code></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max(a,b) (((a) &gt; (b)) ? (a) : (b))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> min(a,b) (((a) &lt; (b)) ? (a) : (b))</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> n = nums1.<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">int</span> m = nums2.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (n &gt; m)  <span class="comment">//保证数组1一定最短</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> findMedianSortedArrays(nums2, nums1);</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">		<span class="comment">// Ci 为第i个数组的割,比如C1为2时表示第1个数组只有2个元素。LMaxi为第i个数组割后的左元素。RMini为第i个数组割后的右元素。</span></span><br><span class="line">		<span class="keyword">int</span> LMax1, LMax2, RMin1, RMin2, c1, c2, lo = <span class="number">0</span>, hi = <span class="number">2</span> * n;  <span class="comment">//我们目前是虚拟加了'#'所以数组1是2*n长度</span></span><br><span class="line">	</span><br><span class="line">		<span class="keyword">while</span> (lo &lt;= hi)   <span class="comment">//二分</span></span><br><span class="line">		&#123;</span><br><span class="line">			c1 = (lo + hi) / <span class="number">2</span>;  <span class="comment">//c1是二分的结果</span></span><br><span class="line">			c2 = m + n - c1;</span><br><span class="line">	</span><br><span class="line">			LMax1 = (c1 == <span class="number">0</span>) ? INT_MIN : nums1[(c1 - <span class="number">1</span>) / <span class="number">2</span>];</span><br><span class="line">			RMin1 = (c1 == <span class="number">2</span> * n) ? INT_MAX : nums1[c1 / <span class="number">2</span>];</span><br><span class="line">			LMax2 = (c2 == <span class="number">0</span>) ? INT_MIN : nums2[(c2 - <span class="number">1</span>) / <span class="number">2</span>];</span><br><span class="line">			RMin2 = (c2 == <span class="number">2</span> * m) ? INT_MAX : nums2[c2 / <span class="number">2</span>];</span><br><span class="line">	</span><br><span class="line">			<span class="keyword">if</span> (LMax1 &gt; RMin2)</span><br><span class="line">				hi = c1 - <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (LMax2 &gt; RMin1)</span><br><span class="line">				lo = c1 + <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> (<span class="built_in">max</span>(LMax1, LMax2) + <span class="built_in">min</span>(RMin1, RMin2)) / <span class="number">2.0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nums1 = &#123; <span class="number">2</span>,<span class="number">3</span>, <span class="number">5</span> &#125;;</span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nums2 = &#123; <span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>, <span class="number">9</span> &#125;;</span><br><span class="line">	</span><br><span class="line">	Solution solution;</span><br><span class="line">	<span class="keyword">double</span> ret = solution.findMedianSortedArrays(nums1, nums2);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Study</category>
        <category>Algorithm</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>Leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>我与炉石传说的故事</title>
    <url>/2020/04/07/MyHearthstoneLife/</url>
    <content><![CDATA[<p>​    随着凤凰年的临近，<strong>炉石传说</strong>这款游戏也迎来了她的第<strong>6</strong>个生日，也是我入坑的第<strong>4</strong>个年头了。除开宝可梦系列以外，这是陪我最久的游戏了。这款带给我无数回忆，让我结识了许多朋友的游戏，至今还有着不俗的热度。今年面临考研压力，我可能要<strong>退坑</strong>很长一段时间，谨以此文记录下我与炉石传说的故事。</p>
<a id="more"></a>

<h2 id="入坑"><a href="#入坑" class="headerlink" title="入坑"></a>入坑</h2><p>​    那是2017的夏天了，结束高考的我在朋友<strong>W</strong>的推荐下注册了账号。当时是在网吧，在W的威逼利诱之下，此前并没有什么卡牌游戏游玩经验(<del>小学时拿着ZZ少年馆的游戏王假卡口胡对战除外</del>)的我，结束入门教程后迅速氪了新手礼包。前六包顺势出了两发<strong>金色传说</strong>，我当时并不知道这意味着什么，只是看到W破口大骂blizzard，隔壁的玩家默默关掉DNF打开炉石…</p>
<h2 id="萌新"><a href="#萌新" class="headerlink" title="萌新"></a>萌新</h2><p>​    时值冰封王座上线前夕，由于入坑时的欧气爆发，W自告奋勇帮我拆卡合卡组了套 <code>青海萨</code>（分奴嘴脸XD）。现在回想起来有些后悔，金佛丁就是在那时离我而去，而后4年间我竟再也没开出佛丁…那套 <code>青海萨</code> 给新手的我留下了很深印象——1费就能从牌库射出的帕奇斯、6费魅影歹徒+异变的随机性、慢慢成长的青玉魔像、右手神抽的嗜血斩杀，纵有再多伏笔，也能托卡组强度的福赢多输少顺利上分。</p>
<p>​    冰封王座上线了，我经历了第一次环境变化。天梯一片绿意，就像段子所说，十局天梯有二十个德鲁伊。<code>青玉德</code>、<code>快攻德</code>、<code>咆哮德</code>  强度极高又相互掩护，输多赢少又没尘加入对面，我变得心灰意冷起来。后续强度过分的狗头人版本更是加速了卡组造价的上升，彼时并无积蓄的我，看着<code>宇宙牧</code>、<code>魔块术</code>这些造价高昂的卡组只能心痒。转而某宝买了个金币号随便玩玩 。（还好及时醒悟，几个月后重新拾起了自己的大号）</p>
<h2 id="传说"><a href="#传说" class="headerlink" title="传说"></a>传说</h2><p>​    和我入坑的猛犸年的群魔乱舞相比，渡鸦年的卡牌强度一直被玩家诟病。女巫森林、砰砰计划、拉斯塔哈的大乱斗，三个版本的存在感仅剩狼王和巴库。这是炉石设计组对卡牌模型不断膨胀的一种妥协，看得出他们很用心想让游戏走得更长远。狼王和巴库的带来的开局技能升级使得奇数偶数卡组几乎每回合都能打满费用，很快天梯所有人都认识到<strong>永不卡手的卡组</strong>是多么可怕。</p>
<p>​    也是在这时，平时都在低保分段划水的我，第一次用<code>偶数萨</code>上了狂野传说，隔月<code>奇数骑</code>拿下标准传说。最肝的一个月在砰砰计划中期，当时为了到外服玩威兹班而建的美服账号，拆拆合合组了标准狂野两套卡组，加上国服的账号，双服四传说。（这里吐槽下带我入坑就玩分奴卡组的W至今未能打上传说XD）不过高强度的游玩带来的副作用就是一段时间都不想看到炉石相关的东西 : ( 最后一次双模式都打传说也是在渡鸦年的末尾，而后基本上是两边都玩玩，每个月主要玩其中一个。</p>
<h2 id="氪金"><a href="#氪金" class="headerlink" title="氪金"></a>氪金</h2><blockquote>
<p>炉石传说是一个免费游戏。</p>
</blockquote>
<blockquote>
<p>氪金只有零次和无数次。</p>
</blockquote>
<p>​    刚入坑没多久赶上风暴英雄与炉石联动送法师皮肤<code>卡德加</code>，我误以为与魔兽世界升级送骑士皮肤<code>莉亚德琳</code>一样属于长期联动没有及时获得就错过了（MOBA游戏苦手），而后懊恼了很久。砰砰计划时期首次出现预购捆绑皮肤——术士的<code>机械加拉克苏斯</code> ，实在太帅了。自此我便开始了每个版本的预购，为了收集每一款皮肤，偶尔上架的绑定皮肤的合集也一个不拉。（果然免费游戏才是最贵的游戏啊）</p>
<p>​    入坑前的皮肤<code>泰兰德</code>在今年商店重做后返场获得。<code>卡德加</code>也重新进入商店轮换可以购买。从此我终于完成了全皮肤收集（<del>一条不归路</del>）。</p>
<h2 id="直播"><a href="#直播" class="headerlink" title="直播"></a>直播</h2><p>​    最早去看的主播是W推荐的涛妹，然后顺着弹幕找到了<del>全斗鱼声音最大的主播</del>狗贼…都是些偏娱乐向的主播，与其说是直播打牌，更多的是与弹幕整活互动；上了传说以后则更喜欢看一些技术向的主播和职业选手，喜欢看他们说出自己打牌时的思路。看得最久的主播是异灵术老师和Alan870806，也因此在这两位的水友群里认识了不少朋友，相识于炉石，不止于炉石。</p>
<h2 id="竞技"><a href="#竞技" class="headerlink" title="竞技"></a>竞技</h2><p>​    记得刚拿到传说卡背时兴奋了好久，只恨设为默认卡背不能自己欣赏到。那时还too young，以为自己刚上传说的实力去打实力赛怎么说结果也不会很难堪。真正去打比赛时才发现在线下对战时，脱离了平时惯用的记牌器，打牌太快而伏笔过多，记牌和读牌的薄弱一览无余。就这样偶有参加，混完了南北两款实力赛参赛卡背，最佳成绩也不过16强。</p>
<p>​    在Alan水友群的时候认识了水哥，达到当月传说的要求加入了SNE战队，很多相识至今的朋友就是在队内群认识的。虽然只举办了很少几次炉石队内赛，不过在平时观战队里大佬的操作时，我还是能学到很多。在某个月一天我坚持<code>防战</code>上分结果从R1连败回R5，心态已经炸裂的时候，是不二神和A神两位可靠队友的连麦教学救了我。自此，我对待炉石的心态好了很多。</p>
<h2 id="杂谈"><a href="#杂谈" class="headerlink" title="杂谈"></a>杂谈</h2><ul>
<li><p>遗憾</p>
<p>最大的遗憾就是快毕业了还没有拿到<code>达拉然卡背</code> （所以这也是考研的动力啊再给我三年机会啊XD）</p>
<p>竞技场至今未能12胜（偏爱构筑模式，竞技场打得很少，也不喜欢看抓牌教学）</p>
<p>…</p>
</li>
</ul>
<ul>
<li><p>喜欢</p>
<p>最喜欢的<strong>单卡</strong>是：<code>发掘潜力</code>（奥丹姆版本德鲁伊任务）</p>
<p>最喜欢的<strong>卡组</strong>是：<code>蓝龙德</code>（标准模式-大乱斗版本）| <code>宇宙牧</code>（狂野模式-斩杀构筑）</p>
<p>最喜欢的<strong>职业选手</strong>是：Hunterace （有幸与偶像合影，我没有遗憾了XD）<br>…</p>
</li>
</ul>
<p>​    现在是2020.4.7晚，明天炉石传说的新版本<code>外域的灰烬</code>正式上线，我也将正式进入退坑状态。不管怎么说，炉石传说也贯穿了我的大学生涯，串联起太多回忆，希望一年之后回来的时候她会变得更好，我还会有再搓上一局又一局的激情。</p>
]]></content>
      <categories>
        <category>Play</category>
        <category>HearthStone</category>
      </categories>
      <tags>
        <tag>炉石传说</tag>
        <tag>HearthStone</tag>
      </tags>
  </entry>
  <entry>
    <title>GBA文件转CIA文件，在3ds上游玩GBA游戏的解决方案</title>
    <url>/2020/03/30/GBA-VC-InjectorFor3DS/</url>
    <content><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p><del>为什么要水这么一篇文章</del></p>
<p>在把switch借给朋友玩的这段时间，我把目光投向了吃灰已久的3ds….</p>
<p>我想要在实机上游玩gba游戏，但是3ds上的模拟器又有各种各样的兼容性问题，达不到eshop里VC金银流畅的游玩体验；宣称能游玩GBA的DSTWO PLUS烧录卡早已停产，某宝/闲鱼的价格居高不下…经过一番摸索，我找到了<strong>可能</strong>是现今最好的解决方案。</p>
<a id="more"></a>

<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li><p>一台BOOT9STARP(B9S)破解的3ds</p>
<p>参考<a href="https://3ds.hacks.guide/" target="_blank" rel="noopener">3ds破解手册</a>或者<a href="https://stray-soul.site/index.php/3dshack-getstarted" target="_blank" rel="noopener">一只火狐大佬整理的教程</a>(推荐)</p>
<p>嫌麻烦的同学可以<del>交给热心摊主处理</del>  </p>
</li>
<li><p><a href="https://gbatemp.net/threads/release-ultimate-gba-vc-injector-for-3ds.438057/" target="_blank" rel="noopener">Ultimate GBA VC Injector for 3DS</a></p>
<p>汉化版<a href="https://1drv.ms/u/s!AuzARhFyMrG9lD29u9s_vl-PE0CN?e=pyFypW" target="_blank" rel="noopener">下载链接</a></p>
</li>
<li><p>你想要在3ds上运行的GBA游戏ROM文件</p>
<p>这里以<strong>漆黑的魅影</strong>为例（很棒的GBA宝可梦改版，我一直想在实机上玩）</p>
</li>
</ul>
<h1 id="GBA-转CIA"><a href="#GBA-转CIA" class="headerlink" title="GBA 转CIA"></a>GBA 转CIA</h1><ol>
<li><p>打开软件并导入下载好的<code>.gba</code>文件，ROM大小和存档类型会自动确认(汉化版ROM往往是<em>数据库未找到该游戏</em>，请确保选择的<strong>正确无误</strong>以免影响存档)</p>
<p><img src="gba2cia1.png" alt="gba2cia1"></p>
<p><img src="gba2cia2.png" alt="gba2cia2"></p>
</li>
<li><p>填写要转换的VC图标和名称(因为3ds字库的原因建议不要使用中文XD)，设置3D横幅(就是选中这个游戏时3ds上屏的画面)</p>
<p><img src="gba2cia3.png" alt="gba2cia3"></p>
<p><img src="gba2cia4.png" alt="gba2cia4"></p>
</li>
<li><p>设置VC参数并导出CIA文件(注意当转换多个<code>.cia</code>文件时，确保每个文件的<em>产品代码</em>及<em>项目ID</em>都不一样)</p>
<p><img src="gba2cia5.png" alt="gba2cia5"></p>
</li>
<li><p>在3ds上安装转换好的<code>.cia</code>文件</p>
<p>关于如何B9S<a href="https://stray-soul.site/index.php/install-cia" target="_blank" rel="noopener"><strong>如何安装cia文件</strong></a>这里不再赘述(实在懒得截图了)</p>
<p><img src="gba2cia6.png" alt="gba2cia6"></p>
<p>大功告成~</p>
</li>
</ol>
<h1 id="备注事项"><a href="#备注事项" class="headerlink" title="备注事项"></a>备注事项</h1><ul>
<li>据说部分老款3ds对这种方式转换的<code>.cia</code>支持不好，会出现黑屏情况(我的美版老小三反正测试是没问题啦)</li>
<li>港版不支持港版不支持港版不支持</li>
<li><strong>存档类型</strong>一定要设置正确</li>
</ul>
]]></content>
      <categories>
        <category>Play</category>
        <category>3ds</category>
      </categories>
      <tags>
        <tag>3ds</tag>
        <tag>GBA</tag>
      </tags>
  </entry>
  <entry>
    <title>我的政治维度（PolitiScales测试结果）</title>
    <url>/2020/03/28/MyPoliticalTest/</url>
    <content><![CDATA[<h1 id="什么是PolitiScales测试"><a href="#什么是PolitiScales测试" class="headerlink" title="什么是PolitiScales测试"></a>什么是PolitiScales测试</h1><blockquote>
<p><a href="http://www.politiscales.net/" target="_blank" rel="noopener">PolitiScale</a> 是一个政治测试，使用8个维度的意识形态价值观来帮助你了解你在政治领域的归属。</p>
</blockquote>
<h1 id="我的测试结果"><a href="#我的测试结果" class="headerlink" title="我的测试结果"></a>我的测试结果</h1><a id="more"></a>

<p><img src="politiscales.png" alt="PolitiScales"></p>
<h1 id="具体分析"><a href="#具体分析" class="headerlink" title="具体分析"></a>具体分析</h1><h2 id="社会建构主义-本质主义"><a href="#社会建构主义-本质主义" class="headerlink" title="社会建构主义/本质主义"></a>社会建构主义/本质主义</h2><blockquote>
<p>为什么人们是这样的？这个维度是对同一问题相反的两极。</p>
<p><strong>建构主义者</strong>认为，人们从他们的环境，尤其是社会环境中，建立自己，正是因为周遭的环境造就他们的特性，使他们变成他们现在的样子。</p>
<p>相反，<strong>本质主义者</strong>认为一个人的个性是源于他天生本来的样子，造就他的特性是内在的、天生的。</p>
</blockquote>
<p> 有点意外，测试结果显示我更偏向<strong>本质主义</strong>。我认为塑造一个人的特性，先天固然有影响，但更不能忽视后天所处环境的作用。<del>“<em>一个人的</em>命运啊,当然要靠自我<em>奋斗,但是也要考虑</em>到<em>历史的进程</em>。”</del></p>
<h2 id="修复性司法-惩罚性司法"><a href="#修复性司法-惩罚性司法" class="headerlink" title="修复性司法/惩罚性司法"></a><strong>修复性司法/惩罚性司法</strong></h2><blockquote>
<p>赞成<strong>修复性司法</strong>的人认为，司法的作用是将被宣告有罪的人重新置于“正确的道路”上，使他们明白为什么他们不应该做他们所做的事情，为什么他们被宣告有罪，并伴随着他们一路恢复前进。</p>
<p>相反，<strong>惩罚性司法</strong>的支持者认为，司法的作用是劝阻的，既是为了被宣告有罪的人 （避免累犯），也是为了对社会的其他人 (让他们例子成为反面教材)。</p>
</blockquote>
<p>显然地，我更支持<strong>惩罚性司法</strong>。<strong>修复性司法</strong>往往试图在犯人、被害者、社会寻求损失最小化的方案，让被害者一方获得赔偿，让社会秩序维持稳定以及<strong>让犯人改过自新</strong>。这种方案太过美好，且不现实。就像我坚决不支持废除<strong>死刑</strong>一样，我认为<strong>惩罚性司法</strong>通过高昂的<strong>违法成本</strong>(甚至是生命)震慑了许多潜在的违法分子，让这些人“有贼心没贼胆”，进而维护社会稳定。</p>
<h2 id="进步主义-保守主义"><a href="#进步主义-保守主义" class="headerlink" title="进步主义/保守主义"></a><strong>进步主义/保守主义</strong></h2><blockquote>
<p><strong>进步主义</strong>者努力建设社会进步，创造一个更美好的社会，面向未来，而不关心传统。他们经常认为现在比过去好，有必要坚持这条道路。</p>
<p>相反，<strong>保守主义</strong>者希望保持现状，甚至重新插入一些已经被认为是已经消失的或者正在消失的价值观。传统，如同宗教的遗产，被认为是智慧的源泉。</p>
</blockquote>
<p>我是<strong>进步主义</strong>者，生产力的发展必然带动思想的进步，并非所有落后消失的价值观/传统都需要得到保留。</p>
<h2 id="国际主义-民族主义"><a href="#国际主义-民族主义" class="headerlink" title="国际主义/民族主义"></a><strong>国际主义/民族主义</strong></h2><blockquote>
<p><strong>国际主义</strong>者是一组身份不同的人，其共同目的是阻止在众多国家和他们的居民之间建立阶段制度，并尽可能促进他们的合作。最终目标是消除主权边界。</p>
<p>另一方面，<strong>民族主义</strong>者是由各种各样的思想组成，具体来说，认为本国和他的公司高于外国人。部分人也为每个人都有一个国家的想法辩护。</p>
</blockquote>
<p>我更偏向<strong>国际主义</strong>的很大一部分原因是对近几年在国内社交平台上随处可见的<strong>暴论</strong>的反感。中国是由<strong>中国共产党</strong>领导的<strong>社会主义</strong>国家，国内<strong>民族主义</strong>却日渐高涨是很奇怪的。<strong>共产主义</strong>信仰理应高于<strong>民族主义</strong>，不可否认后者在近代中国发展至今的积极作用，但更要时刻警惕<strong>民族主义</strong>在某些情况下演变成的<strong>极端民族主义</strong>甚至<strong>种族主义</strong>。</p>
<h2 id="共产主义-资本主义"><a href="#共产主义-资本主义" class="headerlink" title="共产主义/资本主义"></a><strong>共产主义/资本主义</strong></h2><blockquote>
<p><strong>共产主义</strong>是一个庞大的政治学说。在这个测试中主要区分共产主义中简单的指标，认为您是为生产资料的公共财产。</p>
<p><strong>资本主义</strong>同样也是充满矛盾的理念。在这个测试中主要区分为资本主义中简单的指标，认为您是为生产资料的私有财产。</p>
</blockquote>
<p>在这个选项上我并不想偏向哪一方。<del>“不管<em>黑猫白猫<em>，能捉</em>老鼠<em>的</em>就是好猫”</em></del></p>
<h2 id="规范主义-放任主义"><a href="#规范主义-放任主义" class="headerlink" title="规范主义/放任主义"></a><strong>规范主义/放任主义</strong></h2><blockquote>
<p>这个维度代表了政府对市场经济的态度。在这种情况下，生产资料的重要部分是私人的。<strong>放任主义</strong>者反对在不质疑<strong>资本主义</strong>的情况下需要采取手段。如果你更<strong>资本主义</strong>，这个维度代表你在经济方面的目标。如果你更<strong>共产主义</strong>，则此维度代表对当前经济系统所期望的最小错误。</p>
<p><strong>规范主义</strong>是为了公共利益应予经济活动规范的一种观念。认为可以通过立法、规划、补助金、可变税收等来调节经济活动。</p>
<p>相反，<strong>放任主义</strong>认为经济活动不应受到监管，因为经济活动本身符合公共利益。它支持薄弱的立法、很少或根本没有补助金、固定的征税，往往国家在经济中的作用很薄弱，甚至完全抑制。</p>
</blockquote>
<p>我支持<strong>规范主义</strong>。我对金融的了解不多，<strong>中国特色社会主义市场经济</strong>很明显遵循大体上的<strong>规范主义</strong>，相较于许多西方国家的<strong>放任主义</strong>，中国经济的不断高速增长已经证明了它的优越性。</p>
<h2 id="生态主义-生产主义"><a href="#生态主义-生产主义" class="headerlink" title="生态主义/生产主义"></a><strong>生态主义/生产主义</strong></h2><blockquote>
<p><strong>生态主义</strong>者在政治上支持优先保护环境，尽量限制人类活动对生物多样性的影响，即使它意味着通过或多或少地改变我们目前的生活方式来限制这些人类活动。</p>
<p><strong>生产主义</strong>者通过支持增加生产或使用对环境有某些影响的方法，来优先满足人类的需要。</p>
</blockquote>
<p>我是坚定的<strong>生产主义</strong>者。环保固然重要，但要给人类发展让路。</p>
<h2 id="革命主义-改革主义"><a href="#革命主义-改革主义" class="headerlink" title="革命主义/改革主义"></a><strong>革命主义/改革主义</strong></h2><blockquote>
<p><strong>革命者</strong>倾向于直接采取行动，往往是发生在合法性的边缘，以达到他们的目标：用完全不同的政治组织取代目前的组织。</p>
<p><strong>改革派</strong>倾向于采取法律行动来实现他们的目标：逐步改变政治组织。通过合法手段，如选举、合法示威、请愿等方式。</p>
</blockquote>
<p>我是<strong>改革派</strong>。<strong>革命</strong>往往过于激进，对现有政体的不足我倾向于通过合法方式去<strong>改革</strong>。</p>
<h1 id="一些感想"><a href="#一些感想" class="headerlink" title="一些感想"></a>一些感想</h1><p>​    对关心政治的人来说，我认为这个测试是有必要的，能够帮助了解自己内心的政治维度，从集体的角度回答“我是谁？”这个问题。但是人的选择很大程度上取决于自身的历史、文化、立场和偏见，相信经过一段时间的学习和再思考后，我的选择也会有些许(也可能很大)的变化。一年之后我将再做一遍这个测试，希望届时能有所反思与收获。</p>
]]></content>
      <categories>
        <category>Life</category>
        <category>PolitiScales</category>
      </categories>
      <tags>
        <tag>PolitiScales</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown notes</title>
    <url>/2020/03/12/MarkdownNotes/</url>
    <content><![CDATA[<blockquote>
<p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>
</blockquote>
<p>以下是Markdown的基础语法</p>
<a id="more"></a>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">~~删除线~~</span><br><span class="line"><span class="emphasis">*斜体*</span></span><br><span class="line"><span class="emphasis">_斜体第二种方法_</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**加粗**</span></span><br><span class="line"><span class="strong">__加粗的第二种方法__</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="strong">___粗斜体__</span>_</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">两个enter是换行，或者用<span class="xml"><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span>标签表示换行</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">用一行的=或者-表示一级标题和二级标题。如：</span><br><span class="line">一级标题</span><br><span class="line">=======</span><br><span class="line">二级标题</span><br><span class="line">--------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">也可以在前面加上一到六个#表示标题的1级到6级，标题前加一个空格。如：</span><br><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">无序列表：在前面加上 * 或者 + 或者 - 然后加个空格：</span><br><span class="line"><span class="bullet">* </span>ABC</span><br><span class="line"><span class="bullet">* </span>DEF</span><br><span class="line"><span class="bullet">* </span>GHI</span><br><span class="line"></span><br><span class="line"><span class="bullet">+ </span>JKL</span><br><span class="line"><span class="bullet">+ </span>MNO</span><br><span class="line"><span class="bullet">+ </span>PQR</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>STU</span><br><span class="line"><span class="bullet">- </span>VWX</span><br><span class="line"><span class="bullet">- </span>YZZ</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">有序列表：数字+英文句点+空格。如下：</span><br><span class="line"><span class="bullet">1. </span>呵呵</span><br><span class="line"><span class="bullet">2. </span>哈哈</span><br><span class="line"><span class="bullet">3. </span>嘿嘿</span><br><span class="line"><span class="bullet">4. </span>哼哼</span><br><span class="line"></span><br><span class="line">&amp;lt;   // 会显示为”<span class="xml"><span class="tag">&lt;<span class="name">“</span></span></span></span><br><span class="line"><span class="xml"><span class="symbol">&amp;amp;</span>  // 会显示为”&amp;“：在 href 属性里面，必须将 &amp; 转变为 <span class="symbol">&amp;amp;</span></span></span><br><span class="line"><span class="xml">\.     // 为了防止产生"1."变为有序列表，则可以写成"1\."</span></span><br><span class="line"></span><br><span class="line"><span class="xml"> * _   // 如果 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">&gt;</span>只在整个段落的第一行最前面加上大于号可以显示引用（此时出现引用形式，并且为斜体）。但是引言内如果要断行，那个空行也必须在前面加上大于号。就像下面写的酱紫：</span><br><span class="line">&gt;&gt;区块引言也可以有级别，在前面加上不同数量的大于号即可。比如说这就是一个二级引言。</span><br><span class="line">&gt;&gt;</span><br><span class="line">&gt;&gt;&gt;这是一个三级引言。格式会显示为字体更小了。</span><br><span class="line"></span><br><span class="line">建立分割线的方法有：</span><br><span class="line"><span class="bullet">* </span><span class="emphasis">* *</span></span><br><span class="line"><span class="strong">*****</span></span><br><span class="line"><span class="bullet">- </span>- -</span><br><span class="line">-------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">超级链接：[<span class="string">超级链接显示的文字</span>](<span class="link">超级链接的网址，可以是绝对路径、相对路径</span>)</span><br><span class="line">也支持HTML格式的超级链接<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.baidu.com/"</span>&gt;</span></span>百度<span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">如果要标记一小段行内程序代码，可以用反引号把它包起来，像这样：</span><br><span class="line">Use the <span class="code">`printf()`</span> function.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">插入图片：![<span class="string">图片的替换文字</span>](<span class="link">图片的地址或路径</span>)</span><br><span class="line">![<span class="string">风景区图片</span>](<span class="link">/Snip20160202_227.png</span>)</span><br><span class="line"></span><br><span class="line">Email邮件：</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">123456789@qq.com</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">锚点：(能够链接到某个一级标题)</span><br><span class="line">[<span class="string">想要显示的名称</span>](<span class="link">#锚点的名称</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Study</category>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
